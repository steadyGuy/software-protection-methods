version: '3'

services:
  node-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: node-app
    container_name: node-app
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "3001:3000"
    volumes:
      - .:/home/node/app
      - ./node_modules:/home/node/app/node_modules
    networks:
      - app-network

  db:
    image: mongo
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:  
      - dbdata:/data/db   
    networks:
      - app-network  

  mongo-express:
    image: mongo-express
    env_file: .env
    ports:
     - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USERNAME
     - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
     - ME_CONFIG_MONGODB_SERVER=db
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules: 

# Some info may be found here: 
# https://www.digitalocean.com/community/tutorials/containerizing-a-node-js-application-for-development-with-docker-compose-ru